spring.application.name=payment-service
server.port=${SERVER_PORT:8084}

# --- Postgres (Neon) ---
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.jpa.hibernate.ddl-auto=validate

spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- Hikari (pool) ---
spring.datasource.hikari.maximum-pool-size=40
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.connection-timeout=2500
spring.datasource.hikari.max-lifetime=900000

# --- Tomcat alta concorrÃªncia ---
server.tomcat.accept-count=2000
server.tomcat.threads.max=600
server.tomcat.threads.min-spare=50
server.compression.enabled=true
server.compression.mime-types=application/json,text/plain,text/html
server.http2.enabled=true

# --- PIX fixo ---
pix.key=${PIX_KEY}
pix.merchant.name=ARS
pix.merchant.city=FARROUPILHA
pix.amount=${SIGN_PRICE}
pix.txid.prefix=ARS
pix.qr.expiration-minutes=60

# --- Jobs (Schedulers) ---
app.jobs.expire-subscriptions.cron=0 */5 * * * *
app.jobs.expire-payments.cron=0 */5 * * * *
app.grace-period-hours=2

# --- Webhook assinatura (opcional) ---
#webhook.shared-secret=${WEBHOOK_SECRET:}

# --- Observabilidade ---
management.endpoints.web.exposure.include=health,info,prometheus
management.metrics.export.prometheus.enabled=true
management.endpoint.prometheus.enabled=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
